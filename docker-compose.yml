services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=expense_tracker
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      args:
        - INSTALL_DEV=false
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=expense_tracker
      - LOG_LEVEL=INFO
      - JSON_LOGS=true
      - ENVIRONMENT=development
      - ACCESS_TOKEN_EXPIRE_MINUTES=10080
      - SECRET_KEY=${SECRET_KEY:-secretkeyfordev}
      - SERVER_NAME=ExpenseTracker
      - SERVER_HOST=http://localhost:8000
      - BACKEND_CORS_ORIGINS=["http://localhost:8501", "http://localhost:8000", "http://frontend:8501"]
    depends_on:
      db:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
    depends_on:
      - backend
    command: streamlit run streamlit_app.py

  # Service for running tests
  test:
    build:
      context: ./backend
      args:
        - INSTALL_DEV=true
    volumes:
      - ./backend:/app
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=expense_tracker_test
      - LOG_LEVEL=DEBUG
      - JSON_LOGS=false
      - ENVIRONMENT=test
      - ACCESS_TOKEN_EXPIRE_MINUTES=10080
      - SECRET_KEY=${SECRET_KEY:-secretkeyfortests}
    depends_on:
      db:
        condition: service_healthy
    command: pytest -xvs

volumes:
  postgres_data: